{"version":3,"sources":["../src/startAttempt.js"],"names":["define","$","Ajax","Notification","setup","props","window","share_state","document","getElementById","window_surface","screenoff","videoElem","logElem","displayMediaOptions","video","cursor","audio","click","event","preventDefault","startCapture","css","photo","canvas","context","getContext","drawImage","width","height","data","toDataURL","setAttribute","courseid","value","cmid","profileimage","style","display","call","methodname","args","done","warnings","length","status","addNotification","message","type","fail","exception","innerHTML","navigator","mediaDevices","getDisplayMedia","srcObject","dumpOptionsInfo","errString","toString","alert","screenShotInterval","setInterval","takeScreenshot","videoTrack","getVideoTracks","currentStream","active","settings","getSettings","displaySurface","clearInterval","close","video_screen","canvas_screen","screen_context","screen","screen_data","params","id","screenshotinterval","windowState","updateWindowStatus","stop","location","reload"],"mappings":"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","sourcesContent":["define(['jquery', 'core/ajax', 'core/notification'],\r\n    function($, Ajax, Notification) {\r\n        return {\r\n            setup: function(props) {\r\n                // Console.log('start attempt loaded');\r\n                // console.log(props);\r\n\r\n                window.share_state = document.getElementById('share_state');\r\n                window.window_surface = document.getElementById('window_surface');\r\n                window.screenoff = document.getElementById('screen_off_flag');\r\n\r\n                const videoElem = document.getElementById(\"video-screen\");\r\n                const logElem = document.getElementById(\"log-screen\");\r\n                var displayMediaOptions = {\r\n                    video: {\r\n                        cursor: \"always\"\r\n                    },\r\n                    audio: false\r\n                };\r\n\r\n                $(\"#share_screen_btn\").click(function() {\r\n                    event.preventDefault();\r\n                    // Console.log('screen sharing clicked');\r\n                    startCapture();\r\n                    $(\"#form_activate\").css(\"visibility\", \"visible\");\r\n                    // Options for getDisplayMedia()\r\n\r\n                });\r\n\r\n                $(\"#fcvalidate\").click(function() {\r\n                    event.preventDefault();\r\n                    // Console.log('validate face clicked');\r\n                    var photo = document.getElementById('photo');\r\n                    var canvas = document.getElementById('canvas');\r\n                    var video = document.getElementById('video');\r\n                    var context = canvas.getContext('2d');\r\n                    context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n                    var data = canvas.toDataURL('image/png');\r\n                    photo.setAttribute('src', data);\r\n\r\n                    var courseid = document.getElementById('courseidval').value;\r\n                    var cmid = document.getElementById('cmidval').value;\r\n                    var profileimage = document.getElementById('profileimage').value;\r\n\r\n                    var wsfunction = 'quizaccess_proctoring_validate_face';\r\n                    var params = {\r\n                        'courseid': courseid,\r\n                        'cmid': cmid,\r\n                        'profileimage': profileimage,\r\n                        'webcampicture': data,\r\n                    };\r\n\r\n                    var request = {\r\n                        methodname: wsfunction,\r\n                        args: params\r\n                    };\r\n                    document.getElementById('loading_spinner').style.display = 'block';\r\n                    Ajax.call([request])[0].done(function(data) {\r\n                        if (data.warnings.length < 1) {\r\n                            document.getElementById('loading_spinner').style.display = 'none';\r\n                            // NO; pictureCounter++;\r\n                            // console.log('api response', data);\r\n                            var status = data.status;\r\n                            if (status == 'success') {\r\n                                $(\"#video\").css(\"border\", \"10px solid green\");\r\n                                // Document.getElementById(\"validate_form\").style.display = \"none\";\r\n                                document.getElementById(\"fcvalidate\").style.display = \"none\";\r\n                                document.getElementById(\"share_screen_btn\").style.display = \"block\";\r\n                            } else {\r\n                                $(\"#video\").css(\"border\", \"10px solid red\");\r\n                            }\r\n                        } else {\r\n                            document.getElementById('loading_spinner').style.display = 'none';\r\n                            if (video) {\r\n                                Notification.addNotification({\r\n                                    message: 'Something went wrong during taking the image.',\r\n                                    type: 'error'\r\n                                });\r\n                            }\r\n                        }\r\n                    }).fail(Notification.exception);\r\n\r\n                });\r\n\r\n\r\n                async function startCapture() {\r\n                    logElem.innerHTML = \"\";\r\n                    try {\r\n                        // Console.log(\"vid found success\");\r\n                        videoElem.srcObject = await navigator.mediaDevices.getDisplayMedia(displayMediaOptions);\r\n                        dumpOptionsInfo();\r\n                    } catch (err) {\r\n                        // Console.log(\"Error: \" + err.toString());\r\n                        let errString = err.toString();\r\n                        if (errString == \"NotAllowedError: Permission denied\") {\r\n                            alert(\"Please share entire screen.\");\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                function dumpOptionsInfo() {\r\n                    // Const videoTrack = videoElem.srcObject.getVideoTracks()[0];\r\n\r\n                    // Console.info(\"Track settings:\");\r\n                    // console.info(JSON.stringify(videoTrack.getSettings(), null, 2));\r\n                    // console.info(\"Track constraints:\");\r\n                    // console.info(JSON.stringify(videoTrack.getConstraints(), null, 2));\r\n                }\r\n\r\n                var updateWindowStatus = function() {\r\n                    if (videoElem.srcObject !== null) {\r\n                        // Console.log(videoElem);\r\n                        const videoTrack = videoElem.srcObject.getVideoTracks()[0];\r\n                        var currentStream = videoElem.srcObject;\r\n                        var active = currentStream.active;\r\n                        var settings = videoTrack.getSettings();\r\n                        var displaySurface = settings.displaySurface;\r\n                        document.getElementById('window_surface').value = displaySurface;\r\n                        document.getElementById('share_state').value = active;\r\n                        var screenoff = document.getElementById('screen_off_flag').value;\r\n                        if (screenoff == \"1\") {\r\n                            videoTrack.stop();\r\n                            // Console.log('video stopped');\r\n                            clearInterval(windowState);\r\n                            location.reload();\r\n                        }\r\n                    }\r\n                };\r\n\r\n                var takeScreenshot = function() {\r\n                    var screenoff = document.getElementById('screen_off_flag').value;\r\n                    if (videoElem.srcObject !== null) {\r\n                        // Console.log(videoElem);\r\n                        const videoTrack = videoElem.srcObject.getVideoTracks()[0];\r\n                        var currentStream = videoElem.srcObject;\r\n                        var active = currentStream.active;\r\n                        // Console.log(active);\r\n\r\n                        var settings = videoTrack.getSettings();\r\n                        var displaySurface = settings.displaySurface;\r\n\r\n                        if (screenoff == \"0\") {\r\n                            if (!active) {\r\n                                alert(\"Sorry !! You need to restart the attempt as you have stopped the screenshare.\");\r\n                                clearInterval(screenShotInterval);\r\n                                window.close();\r\n                                return false;\r\n                            }\r\n\r\n                            if (displaySurface !== \"monitor\") {\r\n                                alert(\"Sorry !! You need to share entire screen.\");\r\n                                clearInterval(screenShotInterval);\r\n                                window.close();\r\n                                return false;\r\n                            }\r\n\r\n                        }\r\n                        // Console.log(displaySurface);\r\n                        // console.log(quizurl);\r\n\r\n                        // Capture Screen\r\n                        var video_screen = document.getElementById('video-screen');\r\n                        var canvas_screen = document.getElementById('canvas-screen');\r\n                        var screen_context = canvas_screen.getContext('2d');\r\n                        // Var photo_screen = document.getElementById('photo_screen');\r\n                        canvas_screen.width = screen.width;\r\n                        canvas_screen.height = screen.height;\r\n                        screen_context.drawImage(video_screen, 0, 0, screen.width, screen.height);\r\n                        var screen_data = canvas_screen.toDataURL('image/png');\r\n                        // Photo_screen.setAttribute('src', screen_data);\r\n                        // console.log(screen_data);\r\n\r\n                        // API Call\r\n                        var wsfunction = 'quizaccess_proctoring_send_camshot';\r\n                        var params = {\r\n                            'courseid': props.courseid,\r\n                            'screenshotid': props.id,\r\n                            'quizid': props.cmid,\r\n                            'webcampicture': screen_data,\r\n                            'imagetype': 2\r\n                        };\r\n\r\n                        var request = {\r\n                            methodname: wsfunction,\r\n                            args: params\r\n                        };\r\n\r\n                        // Console.log('params', params);\r\n                        if (screenoff == \"0\") {\r\n                            Ajax.call([request])[0].done(function(data) {\r\n                                if (data.warnings.length < 1) {\r\n                                    // NO; pictureCounter++;\r\n                                } else {\r\n                                    if (video_screen) {\r\n                                        Notification.addNotification({\r\n                                            message: 'Something went wrong during taking the image.',\r\n                                            type: 'error'\r\n                                        });\r\n                                        clearInterval(screenShotInterval);\r\n                                    }\r\n                                }\r\n                            }).fail(Notification.exception);\r\n                        }\r\n                    }\r\n                };\r\n                var screenShotInterval = setInterval(takeScreenshot, props.screenshotinterval);\r\n                var windowState = setInterval(updateWindowStatus, 1000);\r\n                return true;\r\n            }\r\n        };\r\n    });\r\n"],"file":"startAttempt.min.js"}